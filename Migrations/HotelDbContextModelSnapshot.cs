// <auto-generated />
using System;
using HotelBooking.API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBooking.API.Migrations;

[DbContext(typeof(HotelDbContext))]
partial class HotelDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "9.0.2")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("HotelBooking.API.Models.Booking", b =>
        {
            b.Property<int>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasColumnName("id");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

            b.Property<DateTime>("Arrival")
                .HasColumnType("datetime2")
                .HasColumnName("arrival");

            b.Property<bool>("Breakfast")
                .HasColumnType("bit")
                .HasColumnName("breakfast");

            b.Property<DateTime>("Departure")
                .HasColumnType("datetime2")
                .HasColumnName("departure");

            b.Property<string>("EmailAddress")
                .IsRequired()
                .HasColumnType("nvarchar(max)")
                .HasColumnName("email_address");

            b.Property<string>("FirstName")
                .IsRequired()
                .HasColumnType("nvarchar(max)")
                .HasColumnName("first_name");

            b.Property<int>("NumberOfGuests")
                .HasColumnType("int")
                .HasColumnName("number_of_guests");

            b.Property<bool>("Paid")
                .HasColumnType("bit")
                .HasColumnName("paid");

            b.Property<string>("PhoneNumber")
                .IsRequired()
                .HasColumnType("nvarchar(max)")
                .HasColumnName("phone_number");

            b.Property<int>("RoomId")
                .HasColumnType("int")
                .HasColumnName("room_id");

            b.Property<string>("Surname")
                .IsRequired()
                .HasColumnType("nvarchar(max)")
                .HasColumnName("surname");

            b.Property<string>("Title")
                .IsRequired()
                .HasColumnType("nvarchar(max)")
                .HasColumnName("title");

            b.HasKey("Id");

            b.HasIndex("RoomId");

            b.ToTable("Booking");
        });

        modelBuilder.Entity("HotelBooking.API.Models.Hotel", b =>
        {
            b.Property<int>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasColumnName("id");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

            b.Property<string>("Address")
                .IsRequired()
                .HasColumnType("nvarchar(max)")
                .HasColumnName("address");

            b.Property<string>("Name")
                .IsRequired()
                .HasColumnType("nvarchar(max)")
                .HasColumnName("name");

            b.Property<string>("Postcode")
                .IsRequired()
                .HasColumnType("nvarchar(max)")
                .HasColumnName("postcode");

            b.Property<string>("WebAddress")
                .IsRequired()
                .HasColumnType("nvarchar(max)")
                .HasColumnName("web_address");

            b.HasKey("Id");

            b.ToTable("Hotel");
        });

        modelBuilder.Entity("HotelBooking.API.Models.Room", b =>
        {
            b.Property<int>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasColumnName("id");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

            b.Property<int>("Capacity")
                .HasColumnType("int")
                .HasColumnName("capacity");

            b.Property<int>("HotelId")
                .HasColumnType("int")
                .HasColumnName("hotel_id");

            b.Property<string>("RoomType")
                .IsRequired()
                .HasColumnType("nvarchar(max)")
                .HasColumnName("room_type");

            b.HasKey("Id");

            b.HasIndex("HotelId");

            b.ToTable("Room");
        });

        modelBuilder.Entity("HotelBooking.API.Models.Booking", b =>
        {
            b.HasOne("HotelBooking.API.Models.Room", null)
                .WithMany()
                .HasForeignKey("RoomId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired();
        });

        modelBuilder.Entity("HotelBooking.API.Models.Room", b =>
        {
            b.HasOne("HotelBooking.API.Models.Hotel", null)
                .WithMany()
                .HasForeignKey("HotelId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired();
        });
#pragma warning restore 612, 618
    }
}

